CREATE TABLE Product (ID SERIAL NOT NULL, descritopn text, imagePath varchar(255), price float4, name varchar(255) NOT NULL, PRIMARY KEY (ID));
CREATE TABLE Retailer (ID SERIAL NOT NULL, name varchar(255) NOT NULL, url varchar(255) NOT NULL, PRIMARY KEY (ID));
CREATE TABLE Review (url varchar(255) NOT NULL, "date" timestamp NOT NULL, content text NOT NULL, productRaiting float4 NOT NULL, reviewRating float4 NOT NULL, author varchar(255), positiveCount int4 NOT NULL, negativeCount int4 NOT NULL, verifiedPurchase bool, isUserNotCritit bool, ReviewCommentID int4 NOT NULL, PRIMARY KEY (url));
CREATE TABLE ReviewComment (ID SERIAL NOT NULL, content text, rating float4, Reviewurl varchar(255) NOT NULL, PRIMARY KEY (ID));
CREATE TABLE Product_Retailer (ProductID int4 NOT NULL, RetailerID int4 NOT NULL, PRIMARY KEY (ProductID, RetailerID));
CREATE TABLE Pro (fact text NOT NULL, ID varchar(255) NOT NULL, PRIMARY KEY (ID));
CREATE TABLE Cons (fact text NOT NULL, ID varchar(255) NOT NULL, PRIMARY KEY (ID));
CREATE TABLE GPU (ProductID int4 NOT NULL, procManufacturer text, chipset text, model text, architecture text, cooling text, memSize text, memType text, clock text, pciType text, pcoSlots int4, maxRes text);
CREATE TABLE CPU (ProductID int4 NOT NULL, series text, model text, clock text, cores int4, threads int4, socket text, MaxTurbO text, integratedGpu text, fanCooler bool, manufacturer text);
CREATE TABLE Motherboard (ProductID int4 NOT NULL, fromFactor text, cpuType text, cpuCount int4, socket text, netCard bool, soundCard bool, multiGPU bool, crossfire bool, sli bool, maxMem int4, memSlots int4, memType text);
CREATE TABLE Cooling (ProductID int4 NOT NULL, type text, speed text, "size" text, airflow text, noice text, connector text);
CREATE TABLE Chassis (ProductID int4 NOT NULL, type text, atx bool, microAtx bool, miniItx bool, fans int4, brand text, height text, width text, depth text, weight text);
CREATE TABLE SoundCard (ProductID int4 NOT NULL, type text, speakerSupport text, interface text, fullDuplex text);
CREATE TABLE RAM (ProductID int4 NOT NULL, capacity text, technology text, formFactor text, speed text, casLatens text, type text);
CREATE TABLE PSU (ProductID int4 NOT NULL, power text, format text, modular bool, width text, Depth text, height text, weight text, brand text);
CREATE TABLE HardDrive (ProductID int4 NOT NULL, internal bool, type text, formFactor text, capacity text, cacheSize text, transforRate text, brand text, sata text, height text, depth text, width text);
CREATE VIEW Reviews AS SELECT Pro.ID, Pro.fact FROM Review INNER JOIN Pro ON Review.url = Pro.ID INNER JOIN Cons ON Review.url = Cons.ID INNER JOIN ReviewComment ON Review.url = ReviewComment.Reviewurl;
ALTER TABLE Product_Retailer ADD CONSTRAINT FKProduct_Re503218 FOREIGN KEY (ProductID) REFERENCES Product (ID);
ALTER TABLE Product_Retailer ADD CONSTRAINT FKProduct_Re447219 FOREIGN KEY (RetailerID) REFERENCES Retailer (ID);
ALTER TABLE Pro ADD CONSTRAINT FKPro284715 FOREIGN KEY (ID) REFERENCES Review (url);
ALTER TABLE Cons ADD CONSTRAINT FKCons259045 FOREIGN KEY (ID) REFERENCES Review (url);
ALTER TABLE GPU ADD CONSTRAINT FKGPU579683 FOREIGN KEY (ProductID) REFERENCES Product (ID);
ALTER TABLE CPU ADD CONSTRAINT FKCPU583527 FOREIGN KEY (ProductID) REFERENCES Product (ID);
ALTER TABLE Motherboard ADD CONSTRAINT FKMotherboar407656 FOREIGN KEY (ProductID) REFERENCES Product (ID);
ALTER TABLE ReviewComment ADD CONSTRAINT FKReviewComm267431 FOREIGN KEY (Reviewurl) REFERENCES Review (url);
ALTER TABLE Cooling ADD CONSTRAINT FKCooling225058 FOREIGN KEY (ProductID) REFERENCES Product (ID);
ALTER TABLE Chassis ADD CONSTRAINT FKChassis109498 FOREIGN KEY (ProductID) REFERENCES Product (ID);
ALTER TABLE SoundCard ADD CONSTRAINT FKSoundCard696657 FOREIGN KEY (ProductID) REFERENCES Product (ID);
ALTER TABLE RAM ADD CONSTRAINT FKRAM569585 FOREIGN KEY (ProductID) REFERENCES Product (ID);
ALTER TABLE PSU ADD CONSTRAINT FKPSU570941 FOREIGN KEY (ProductID) REFERENCES Product (ID);
ALTER TABLE HardDrive ADD CONSTRAINT FKHardDrive53802 FOREIGN KEY (ProductID) REFERENCES Product (ID);
