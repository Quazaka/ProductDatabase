CREATE TABLE Product (ID INTEGER NOT NULL PRIMARY KEY, descritopn text, imagePath varchar(255), price float(10), name varchar(255) NOT NULL);
CREATE TABLE Retailer (ID INTEGER NOT NULL PRIMARY KEY, name varchar(255) NOT NULL, url varchar(255) NOT NULL);
CREATE TABLE Review (url varchar(255) NOT NULL, "date" timestamp NOT NULL, content text NOT NULL, productRaiting float(10) NOT NULL, reviewRating float(10) NOT NULL, author varchar(255), positiveCount integer(10) NOT NULL, negativeCount integer(10) NOT NULL, verifiedPurchase integer(1), isUserNotCritit integer(1), ReviewCommentID integer(10) NOT NULL, product varchar(255), "Column" integer(10), PRIMARY KEY (url));
CREATE TABLE ReviewComment (ID INTEGER NOT NULL PRIMARY KEY, content text, rating float(10), Reviewurl varchar(255) NOT NULL, FOREIGN KEY(Reviewurl) REFERENCES Review(url));
CREATE TABLE Product_Retailer (ProductID integer(10) NOT NULL, RetailerID integer(10) NOT NULL, PRIMARY KEY (ProductID, RetailerID), FOREIGN KEY(ProductID) REFERENCES Product(ID), FOREIGN KEY(RetailerID) REFERENCES Retailer(ID));
CREATE TABLE Pro (fact text NOT NULL, ID varchar(255) NOT NULL, PRIMARY KEY (ID), FOREIGN KEY(ID) REFERENCES Review(url));
CREATE TABLE Cons (fact text NOT NULL, ID varchar(255) NOT NULL, PRIMARY KEY (ID), FOREIGN KEY(ID) REFERENCES Review(url));
CREATE TABLE GPU (ProductID integer(10) NOT NULL, procManufacturer text, chipset text, model text, architecture text, cooling text, memSize text, memType text, clock text, pciType text, pcoSlots integer(10), maxRes text, FOREIGN KEY(ProductID) REFERENCES Product(ID));
CREATE TABLE CPU (ProductID integer(10) NOT NULL, series text, model text, clock text, cores integer(10), threads integer(10), socket text, MaxTurbO text, integratedGpu text, fanCooler integer(1), manufacturer text, FOREIGN KEY(ProductID) REFERENCES Product(ID));
CREATE TABLE Motherboard (ProductID integer(10) NOT NULL, fromFactor text, cpuType text, cpuCount integer(10), socket text, netCard integer(1), soundCard integer(1), multiGPU integer(1), crossfire integer(1), sli integer(1), maxMem integer(10), memSlots integer(10), memType text, FOREIGN KEY(ProductID) REFERENCES Product(ID));
CREATE TABLE Cooling (ProductID integer(10) NOT NULL, type text, speed text, "size" text, airflow text, noice text, connector text, FOREIGN KEY(ProductID) REFERENCES Product(ID));
CREATE TABLE Chassis (ProductID integer(10) NOT NULL, type text, atx integer(1), microAtx integer(1), miniItx integer(1), fans integer(10), brand text, height text, width text, depth text, weight text, FOREIGN KEY(ProductID) REFERENCES Product(ID));
CREATE TABLE SoundCard (ProductID integer(10) NOT NULL, type text, speakerSupport text, interface text, fullDuplex text, FOREIGN KEY(ProductID) REFERENCES Product(ID));
CREATE TABLE RAM (ProductID integer(10) NOT NULL, capacity text, technology text, formFactor text, speed text, casLatens text, type text, FOREIGN KEY(ProductID) REFERENCES Product(ID));
CREATE TABLE PSU (ProductID integer(10) NOT NULL, power text, format text, modular integer(1), width text, Depth text, height text, weight text, brand text, FOREIGN KEY(ProductID) REFERENCES Product(ID));
CREATE TABLE HardDrive (ProductID integer(10) NOT NULL, internal integer(1), type text, formFactor text, capacity text, cacheSize text, transforRate text, brand text, sata text, height text, depth text, width text, FOREIGN KEY(ProductID) REFERENCES Product(ID));
CREATE VIEW Reviews AS SELECT Pro.ID, Pro.fact FROM Review INNER JOIN Pro ON Review.url = Pro.ID INNER JOIN Cons ON Review.url = Cons.ID INNER JOIN ReviewComment ON Review.url = ReviewComment.Reviewurl;
